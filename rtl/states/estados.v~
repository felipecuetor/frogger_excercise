module estados
   (
    input wire clk, reset,
    input wire sw,
    output wire [7:0] data
   );

   // symbolic state declaration
   localparam
               zero  = 1'b0,
               uno = 1'b1;

reg state_reg, state_next;
reg [7:0] dato;

always @(posedge clk, posedge reset)
       if (reset)
          begin
             state_reg <= zero;
          end
       else
          begin
             state_reg <= state_next;
          end

   always @*
   begin
      state_next = state_reg;   // default state: the same
      case (state_reg)
         zero:
            begin
               dato = 8'b00000000;
               if (sw)
                  begin
                     state_next = uno;
                  end
            end
         uno:
            begin
               dato = 8'b11111111;
               if (sw)
                  begin
                     state_next = zero;
                  end
            end
         default: state_next = zero;
      endcase
   end

assign data = dato;
