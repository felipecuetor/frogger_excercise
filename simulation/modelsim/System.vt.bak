// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "04/06/2018 18:18:40"
                                                                                
// Verilog Test Bench template for design : System
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module System_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg CLOCK_50;
reg [33:0] treg_GPIO_0;
reg [1:0] GPIO_0_IN;
// wires                                               
wire [33:0]  GPIO_0;
wire [7:0]  LED;

// assign statements (if any)                          
assign GPIO_0 = treg_GPIO_0;
System i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.GPIO_0(GPIO_0),
	.GPIO_0_IN(GPIO_0_IN),
	.LED(LED)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
@eachvec;                                              
// --> end                                             
end                                                    
endmodule

